spring:
  shardingsphere:
    # 参数配置，显示sql
    props:
      sql:
        show: true
    # 配置数据源
    datasource:
      # 给每个数据源取别名，下面的ds1,ds2任意取名字
      names: ds0,ds1
      # 给master-ds1每个数据源配置数据库连接信息
      ds0:
        # 配置druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://101.42.156.68:3308/ksd_order_db?useSSL=false&serverTimezone=Hongkong&characterEncoding=utf-8&autoReconnect=true
        username: root
        password: 654321
        maxPoolSize: 100
        minPoolSize: 5
      # 配置ds2-slave
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://101.42.156.68:3309/ksd_order_db?useSSL=false&serverTimezone=Hongkong&characterEncoding=utf-8&autoReconnect=true
        username: root
        password: 123456
        maxPoolSize: 100
        minPoolSize: 5
    # 配置默认数据源ds1
    sharding:
      # 默认数据源，主要用于写，注意一定要配置读写分离 ,注意：如果不配置，那么就会把三个节点都当做从slave节点，新增，修改和删除会出错。
      default-data-source-name: ds0
      tables:
        # ksd_user 逻辑表名
        ksd_user:
          # 数据节点：多数据源$->{0..N}.逻辑表名$->{0..N} 相同表
          actual-data-nodes: ds$->{0..1}.ksd_user$->{0..1}
          # 拆分库策略，也就是什么样子的数据放入到哪个数据库中
          database-strategy:
            inline:
               sharding-column: age
               algorithm-expression: ds$->{age % 2} # 分片算法表达式
          table-strategy:
             inline:
                sharding-column: age
                algorithm-expression: ksd_user$->{age % 2} # 分片算法表达式
        ksd_order:
          # 数据节点：多数据源$->{0..N}.逻辑表名$->{0..N} 相同表
          actual-data-nodes: ds$->{0..1}.ksd_order$->{0..1}
          # 拆分库策略，也就是什么样子的数据放入到哪个数据库中
          database-strategy:
            inline:
              sharding-column: agetime
              algorithm-expression: ds$->{age % 2} # 分片算法表达式
          table-strategy:
            inline:
              sharding-column: agetime
              algorithm-expression: ksd_order$->{age % 2} # 分片算法表达式